<!DOCTYPE html> 
<html> 
<head> 
	<meta charset=utf-8> 
	<title>My second three.js app</title> 
	<style> 
		body { margin: 0; overflow-y: hidden; } 
		canvas { width: 100%; height: 100% } 
		#info {
			position: absolute;
			top: 10px;
			width: 100%;
			text-align: center;
			z-index: 100;
			display:block;
		}
	</style> 
</head> 
<body> 
<script src="js/three.min.js"></script> 



<script>
var camera, scene, renderer;
var geometry, material, mesh, cube;

init();
animate();

function init() {
	camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 0.1, 1000 );
	camera.position.z = 3.5;
	scene = new THREE.Scene();

	geometryMesh = new THREE.BoxGeometry( 1, 1, 1 );
	geometryCube = new THREE.BoxGeometry( 0.85, 0.85, 0.85 );
	materialMesh = new THREE.MeshNormalMaterial();
	materialCube = new THREE.MeshBasicMaterial( { color:0x2f2a2a });
	mesh = new THREE.Mesh( geometryMesh, materialMesh );
	cube = new THREE.Mesh( geometryCube, materialCube ); 
	scene.add( mesh );
	scene.add( cube );
	
// False would mean the cube object doesn't update. 
// The updateMatrix is how you manually update the position of the cube
	cube.matrixAutoUpdate = true;
	cube.updateMatrix();	

	renderer = new THREE.WebGLRenderer( { antialias: true } );
	renderer.setSize( window.innerWidth, window.innerHeight );
	document.body.appendChild( renderer.domElement );
}

function animate() {
	requestAnimationFrame( animate );
	mesh.rotation.x += 0.001;
	mesh.rotation.y += 0.002;
	mesh.rotation.z += 0.003;
	cube.rotation.x += ( Math.random() / -33 );
	cube.rotation.y += ( Math.random() / 33 );
	cube.rotation.z += ( Math.random() / 33 );
	renderer.render( scene, camera );

}
</script> 


<!--
var scene = new THREE.Scene(); 
var camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 0.1, 1000 ); 
var renderer = new THREE.WebGLRenderer(); 

renderer.setSize( window.innerWidth, window.innerHeight ); 
document.body.appendChild( renderer.domElement );

var geometry = new THREE.BoxGeometry( 1, 1, 1 ); 

var material = new THREE.MeshBasicMaterial( { color: 0x3faa00 } ); 
var cube = new THREE.Mesh( geometry, material ); 
object and you won't see much if anything. 
scene.add( cube ); 
camera.position.z = 3;

function animate() { 
	requestAnimationFrame( animate ); 
	cube.rotation.x += 0.0005; 
	cube.rotation.y += 0.01;
	cube.rotation.z += 0.0009;
	renderer.render( scene, camera ); 
} 
animate();
-->



<div id="info" style="z-index: 9; color: white;">Cube - take 9</div>








</body> 
</html>